{
  "name": "LTHRadioButton",
  "tagline": "A radio button with a pretty animation",
  "body": "# LTHRadioButton\r\n\r\nSlightly inspired by Google's material radio button. \r\n\r\nThe clip below has 3 sections: full speed, 25% and 10%, but after converting it to GIF, it actually made it longer, so the 10% part takes a really long time ðŸ˜„. [Here's](https://rolandleth.com/assets/radio-button/video.mp4) an mp4 link; try with Chrome if Safari doesn't work - for me it doesn't.\r\n\r\n![](https://rolandleth.com/assets/radio-button/gif.gif)\r\n\r\n## How to install\r\n\r\n#### CocoaPods\r\n\r\n[CocoaPods](https://cocoapods.org) is a dependency manager for Cocoa projects. You can install it with the following terminal command:\r\n\r\n```\r\ngem install cocoapods\r\n```\r\n\r\nTo integrate `LTHRadioButton` into your Xcode project using CocoaPods, specify it in your Podfile:\r\n\r\n```ruby\r\nsource 'https://github.com/CocoaPods/Specs.git'\r\nplatform :ios, '9.0'\r\nuse_frameworks!\r\n\r\ntarget '<Your Target Name>' do\r\n  pod 'LTHRadioButton'\r\nend\r\n```\r\n\r\nThen, run the following terminal command:\r\n\r\n```\r\npod install\r\n```\r\n\r\n#### Manual\r\n\r\nDrag `LTHRadioButton.swift` from the `source` folder into your Xcode project.\r\n\r\n## How to use\r\n\r\nThe initializer takes up to 3 params: a `radius`, a `selectedColor`, and a `deselectedColor`. All of them are optional:\r\n\r\n* `radius` defaults to `18`\r\n* `selectedColor` defaults to a light blue\r\n* `deselectedColor` defaults to `UIColor.lightGray`\r\n\r\nIt doesn't use Auto Layout internally, but after initialization it will have a proper size, so you can simply create constraints based on its `frame.width` and `frame.height`.\r\n\r\n#### Properties\r\n\r\n`selectedColor` and `deselectedColor` have been made publicly customizable for cases like a `tableView` with alternating row and radio colors, where the `tableView` might dequeue a cell with one color for displaying a cell with a different color.\r\n\r\n`isSelected` - Indicates whether the radio button is selected.\r\n\r\n#### Methods\r\n\r\n```swift\r\ninit(radius: CGFloat = 18, selectedColor: UIColor? = nil, deselectedColor: UIColor? = nil) // Colors default internally if nil.\r\nfunc select(animated: Bool = true) // Selects the radio button.\r\nfunc deselect(animated: Bool = true) // Deselects the radio button.\r\n```\r\n\r\n### Example\r\n\r\n```swift\r\nlet radioButton = LTHRadioButton(selectedColor: .red)\r\ncontainer.addSubview(radioButton)\r\n\r\nradioButton.translatesAutoresizingMaskIntoConstraints = false\r\nNSLayoutConstraint.activate([\r\n  radioButton.centerYAnchor.constraint(equalTo: container.centerYAnchor),\r\n  radioButton.leadingAnchor.constraint(equalTo: container.leadingAnchor, constant: 16),\r\n  radioButton.heightAnchor.constraint(equalToConstant: radioButton.frame.height),\r\n  radioButton.widthAnchor.constraint(equalToConstant: radioButton.frame.width)]\r\n)\r\n\r\n[...]\r\n\r\nradioButton.select()\r\n\r\n[...]\r\n\r\nradioButton.deselect(animated: false)\r\n```\r\n\r\n## Apps using this control\r\n\r\nIf you're using this control, I'd love hearing from you!  \r\n\r\n## License\r\nLicensed under MIT. If you'd like (or need) a license without attribution, don't hesitate to [contact me](mailto:roland@leth.ro).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}